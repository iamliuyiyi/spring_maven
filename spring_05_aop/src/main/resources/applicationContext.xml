<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--普通方法-->
    <!--    <bean id="userDao" class="com.yy.dao.impl.UserDaoImpl" />-->
    <!--    <bean id="userService" class="com.yy.service.impl.UserServiceImpl">-->
    <!--        <property name="userDao" ref="userDao"/>-->
    <!--    </bean>-->

    <!--注解方法-->
    <context:component-scan base-package="com.yy.dao"/>
    <context:component-scan base-package="com.yy.service"/>


    <bean id="beforeLog" class="com.yy.log.BeforeLog"/>
    <bean id="afterLog" class="com.yy.log.AfterLog"/>

    <!--普通类也有注解，那aop肯定也有注解的啦-->

    <!--方法一：使用原生的spring api 实现aop-->
    <!--配置aop-->
    <!--
        <aop:config>
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="pointCut" expression="execution(* com.yy.service.*.*(..))"/>
            <aop:advisor advice-ref="beforeLog" pointcut-ref="pointCut"/>
            <aop:advisor advice-ref="afterLog" pointcut-ref="pointCut"/>

        </aop:config>
    -->


    <!--方法二：自定义类实现aop  需要配置切面、切入点和通知-->
    <!--    <bean id="diyAdvice" class="com.yy.log.DiyAdvice"/>

        <aop:config>
            &lt;!&ndash;切面&ndash;&gt;
            <aop:aspect ref="diyAdvice">
                &lt;!&ndash;切入点&ndash;&gt;
                <aop:pointcut id="pointCut" expression="execution(* com.yy.service.*.*(..))"/>
                &lt;!&ndash;通知&ndash;&gt;
                <aop:before method="beforeAdvice" pointcut-ref="pointCut"/>
                <aop:after method="afterAdvice" pointcut-ref="pointCut"/>
            </aop:aspect>
        </aop:config>-->


    <!--方式三：注解实现aop-->
    <!--开启aop注解支持-->
    <bean id="annotationAdvice" class="com.yy.log.AnnotationAdvice"/>
    <aop:aspectj-autoproxy/>


</beans>